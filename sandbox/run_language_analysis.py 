from language_pattern_analyzer import analyze_language_patterns
from predictive_net import PatternPredictiveNet
import torch
import matplotlib.pyplot as plt

def main():
    # Create and load model
    model = PatternPredictiveNet(
        input_dim=20,  # sequence length
        hidden_dims=[64, 32, 16],
        penultimate_dim=32,
        output_dim=1,
        n_patterns=8
    )
    
    state_dict = torch.load('trained_pattern_model.pt')
    if isinstance(state_dict, dict):
        if 'state_dict' in state_dict:
            model.load_state_dict(state_dict['state_dict'])
        else:
            model.load_state_dict(state_dict)
    
    # Run analysis
    print("Analyzing language patterns...")
    analyzer, data = analyze_language_patterns(model)
    
    print("Analysis complete! Check the generated PNG files.")
    plt.close('all')

if __name__ == "__main__":
    main()